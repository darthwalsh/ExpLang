<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{8897C0AF-8F9E-4423-8055-3D8DD48B77AE}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>MathExp</RootNamespace>
    <AssemblyName>MathExp</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <LangVersion>7.1</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="PerCederberg.Grammatica, Version=1.6.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\Grammatica.1.6.0\lib\netstandard2.0\PerCederberg.Grammatica.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Generated\ExpAnalyzer.cs" />
    <Compile Include="Generated\ExpConstants.cs" />
    <Compile Include="Generated\ExpParser.cs" />
    <Compile Include="Generated\ExpTokenizer.cs" />
    <Compile Include="Printer.cs" />
    <Compile Include="Lexer.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="MathExp.grammar" />
    <None Include="packages.config" />
    <None Include="..\README.md" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="BeforeBuild">
    <Exec Condition="!Exists('Generated\ExpAnalyzer.cs') Or $([System.IO.File]::GetLastWriteTime('MathExp.grammar').Ticks) > $([System.IO.File]::GetLastWriteTime('Generated\ExpAnalyzer.cs').Ticks)"
      Command="java -jar &quot;%TMP%\grammatica-1.6\lib\grammatica-1.6.jar&quot; MathExp.grammar --csoutput Generated --cspublic --csnamespace MathExp.Generated --csclassname Exp" />
  </Target>
</Project>